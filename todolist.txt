Pebble todo list:


pebblebar:

   * fix the problem with require('./shops') in all the new shops plugins
   * get new shops plugins working in place of the older shops plugin that used the single clientData object
   * get how plugins work in order, this is the current plan for better or worse:
   
   we will have "core paths", and "app paths"
   
   core path example : plugins/shops/
   app path example  : plugins/shops_appname/

   * core path : a core path contains assets that are shared by one or more app paths
   * app path : a app path contains just code that is nessacery for a single app function, it depends on a core path.
   
   * both a core and app path can have the following *.js files:
       * responder.js : a script that responds to requests from a client system
       * updater.js : a script that is called by the server every so often to update something server side
       * setup.js : scripts that are to be called when the server starts
   
   shops  // core path for shops contains shops.js dependancy, and setup.js adds that dependacy to the scope object
   shops_getshoppage   // an app that uses shops.js
   shops_getusershops  // an app that uses shops.js
   land
   land_getuserland
   land_update
   
   * a config file of sorts for pebblebar might be nice.
   * updater.js should be a process and not just something that is called from server.js
   * shops plugin :
   
       * should be able to define more then one shop class

pebble_procesor:

   * make a seperate process from the main server.js file called pebble_processor.js
   * The process should process TransactionRequests.
   * every now and then the process should stop processing TransactionRequests to preform other tasks on the current state of accounts.
   * In addition to processing transactions pebble process should also preform a sanity check every now and then, and logg the outcome 
   of that check to the reserve object.
   * In the event of a failed sanity check, pebble_process should take autocorrection action, when it happens this also should be logged to the reserve account.

pebble.js:

    * have a collection called TransactionRequest, all transactions should start out as this, then be processed.
    * once you have the TransactionRequest collection make a seperate process that actually preforms the transactions (call it pebble_processor)

users.js:

    * pull everything that has to do with shops into it's own file.

pebble_check.js:

    * I am only checking prime user accounts, I should be checking ALL accounts.
    
pebble_fix.js:

    * I am only checking prime user accounts when preforming a check, I should be checking ALL accounts.
    
    
    
    
    
DONE:
********** ********** ********** ********** ********** ********** ********** ********** ********** ********** 

pebble.js: (done 1.0.154) allow for the option to give pebble to a usernames prime account
pebblebar: (done 1.0.168) all code for our "plugins" should be in this folder.
pebblebar: (done 1.0.173) the backends folder should be called "plugins", the lable backends is to general
pebblevar: (done 1.0.173) everything that has to do with shops should be pulled into the pebblebar folder if you want shops to be a plugin
pebble.js: (done 1.0.173) fix a bug where a player can create pebble by transfering pebble to the same account.
pebblebar: (done 1.0.179) the clientData object will now be an array of objects
pebblebar: (done 1.0.180) reserve_info, and reserve_take plugins are not working with clientData Array
pebblebar: (done 1.0.186) broke down the shops plugin into many small plugins that work with the new clientData Array.
pebblebar: (done 1.0.194) have a "scope" variable that will contain references to any *.js files that are needed by plugins.
   