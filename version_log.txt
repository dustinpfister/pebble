pebble version logg:

1.0.x

    * pebble 1.0.x will be a Minimum Viable Product (MVP)
    
    MEAN Stack:
    
        * pebble is a MEAN Stack Product.
        * MongoDB is used for database ( mongoose.js )
        * Express.js for a server framework.
        * Angular.js for the client system.
        * Node will be used for backend programming.
    
    Additional barrowed Middleware, libs, ect:
    
        * ejs (embedded javascript) used to help render views server-side.
        * UI Bootstrap html framweork for layout (angular friendly bootstrap).
        * passport.js is used for authentication
        * passport local strategy used.
        * connect-mongo used in place of default memory store for session data
    
    Original code:
    
        * server.js written (this is what will be called with node to start pebble on the server)
        * pebble.js written (this contains methods for working with the pebble reserve)
        * users.js written (this contains methods for working with user accounts)
        * openshift.js (this makes use of environment variables when deployed to openshift, else local alternatives are used )   
    
    Shops : 
    
        * shops can be found at the shops tab
        * a shop can be started by a player if they have the pebbles to start one.
        * shops are baught from "the reserve", and the money goes back to the reserve (reserve account income).
        * there is a limit on the number of shops per user account (it's 3 as of this writing).
        * there will be a shops collection
        * the users shop array stores the ids of the shops the user owns in the shops collction
        * All the shops have a value called weight, the higher the weight the higher the ranking in the shopPages
    
    
    * *.ejs files broken down into partials stored in /views/ejs
    * bootstrap_pebble.css ( hacked over bootstrap.css file in /views/css, used for CSS formatting)
    * "take a pebble" button added that is usedd to take pebbles dirrectly from the reserve's wallet.
    * login, and signup pages added and working.
    * visiters get redirected to the login path, if they visit any path that requires an account including root.
    * at least one tax plan is in effect.  
    * The / (Home) path used to show info about the logged in user
    * The /reserve path, is used to show info about the reserve
    * users land area size based off an expression (size = minsize + random + equalShare + worldWealth
    * pebblebar app works accross diferent paths
    * "take a pebble" button working on reserve path, and working with pebblebar
    * part_pebblebar.ejs : made a plugin system for pebblebar
    * writed a pebblebar plugin for /reserve path
    * writed a pebblebar plugin for / (home) path
    * part_pebblebar.ejs : i want all scripted http to be handled by pebblebar
    
            
    
    
    (proposed additions/changes to 1.0.x)  
    
    
    
    * Have a about path Tab
    * Have a settings path Tab
    * Have a way to vote for what kind of tax plan should be in place (on the reserve tab)
    * have an area property for a user account that reflects the kind of resources that are availabule to the user
    * have resources such as wood, oil, water, and farmland in an area.
    * maybe pull wallets from users.js into new accounts model that will be in pebble.js if you think it's a good idea to do so.
    * Have a tax plan system that allows for more then one tax plan to be in effect including "no tax"
    * SSL for at least login and signup paths if not all
    
    
    * Tax System:
    
        * have a tax plan system that allows for different tax systems to be in effect for "the reserve".
        * each user can place a single vote in favor of the system they would like at the reserve tab.
        * the most popular system is the one that will be in effect.
        * tax systems :
        
            * social - tax system based around user account total wealth in relation to world population.
            * free market - low flat tax system inposed on income only, not total wealth. Population has no impact on system.
            * no tax - pebbels flow out from the reserve, once out the only way they go back is threw the sale of new shops for users.
    
    * PebbleChecker:
    
        * pebbleChecker is a programe that can be called dirrectly from bash.
        * although pebbleChecker can be called dirrectly from bash it will likley be called from a *.js file.
        * the program does the following:
            * sanity check:
                * addes up the sum of pebbles in the reserve wallet as well as all users account wallets called "pebbleSum".
                * pebbleSum is compared to the world total, and if it is equal the sum is valid and no action will need to be taken.
                * in the event of an invalid sum the following action is preformed:
                    * a percent value is computed for each account wallet relative to the invalid sum.
                    * this percent value is used to distribute a new wallet value to all wallets including the reserve.
                    * values are rounded down, and the remaining pebbles end up in the reserve.
                    * this event is logged to a property in the main reserve account object.
                    * the history of these events if they happen can be viewed on the reserve tab
                * a sanity report will be produced and will be logged to the standard out.
    
    * pebbleProcess
    
        * pebbleProcess is a backend system that is always running that processes transactions, collects taxes, and preforms checks.
        * transaction processing:
            * when a transaction is recived by server.js it is logged to a database collection.
            * at any given moment there will be a stack of transactions to process by pebbleProcess.
            * pebbleProcess processes these transactions on a first come first serve basis.
            * any taxes that are recived based on income or transacions are collected (if applicabule).
            * once a transaction is processed it is transfered to a seperate database collection, where it will eventualy be purged.
        * sanity check
            * at the end of every game day, transaction processing is suspened for a sanity check
            * the pebbleChecker backend is called.
            * any corrections are preformed if needed
            * tax Collection:
                * after the sanity check tax collection based on wealth (not income) is preformed (if applicabule).
    
    * SHOPS:
    
        * need a way to see and use other users shops
        * need a way to manage your own shops
        * do shops sell products? if so where do they come from?
        
        
        * we need a process that runs threw all shops and updates values based on timestamps (link the tax collection thing).
        
        * shop weight :
        
            * shops have a value called weight, that is used to determin its ranking in the shops tab pages.
            * a shop starts with a certain amount of weight
            
            
            * ways a shop gains weight :
            
                * starting weight.
                * a sale is made.
                * pebble is spent to upvote it.
        
            * ways a shop looses weight :
            
                * pebble is spent to downvote it.
                * over time it looses weight (decay)
                
        
        * shop class :
        
            * raw source
            
               * creates raw products
               * raw source shops produce raw resources like food, wood, oil, water.
               * souces can be bought by users that have a refignment, or wearhouse shop.
            
            * refignment
            
               * creates products
               * this class of shop produces products from raw sources, and/or other products.
               * refined products are often of greater value then raw souces
               * refined products can not be sold directly to anyone, they can only be sold to a wearhouse
               
            * wearhouse
            
               * stores products
               * a wearhouse stores products, and raw sources
               * pebble is made from charging storage fee's from thouse that use it.
            
            * store
            
               * sells products
               * a store sells products to anyone who wants to buy them.
               * producs are bought from wearhouses
            
            
        * have a start shop option on the reserve tab
        * shops started from reserve:
        * you can only buy one from the reserve if you have no shops at all
            
        
        * shops are a way to make pebbles from other users.
        * a shop can be bought from another player if they have it up for sale.
        * sales tax may be collected for some shops depedning on the shop and tax plan in effect (reserve account income).
        * the limit on the number of shops a user account can have may be upgraded (to a max of say 10 maybe?)
    
    
1.1.x

    (proposed ideas for 1.1.x)
    
    * Have a Help, Manual, or "how to play" Tab
    
    * Land:
    
        * there should be a land tab.
        * each user starts off with a small peace of land
        * for a price a user can buy a new peace of land.
        * if a user has more then one peace of land they can place one of there peaces of land up for sale.
        * will land be generated? or will there be a fixed map?