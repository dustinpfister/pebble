<% include ./parts/part_head.ejs %>

    <body>



        <!-- angular -->
        <script src="/js/angular.js"></script>

        <!-- ui bootstrap -->
        <script src="/js/ui-bootstrap-tpls-1.2.5.min.js"></script>

        <% include ./parts/part_nav.ejs %>

            <div class="main_container">

                <!-- pebblebar -->
                <% include ./parts/part_pebblebar.ejs %>

                    <h2>The Reserve: </h2>

                    <!-- angular client html for reserve path -->
                    <div id="reserve_client_div" ng-controller="control">

                        <ul>

                            <li> world total: {{ reserve.worldTotal }} </li>
                            <li> reserve wallet: {{ reserve.wallet }} </li>
                            <li> world population: {{ reserve.population }} </li>
                            <li> equal share: {{ reserve.equalShare }} </li>
                            <li> Tax Brackets: {{ reserve.brackets }}</li>
                            <li> Last tax collection: {{ reserve.lastCollection }} </li>

                        </ul>


                        
                    <h2>Request Pebbles</h2>
                    <p> requested: <span id="reserveclient_disp">{{ requesting }}</span></p>
                    <input id="reserveclient_take" type="button" value="take a pebble" ng-click="takeButton()">

                    </div>


                    <script>
                        
                        // the pebbleApp for the reserve path
                        var pebbleApp = (function () {

                            var app = angular.module('reserve_client', []),
                            
                            angularEL = document.getElementById('reserve_client_div'),
                                
                            // the number of pebbles requested that is subject to change via user input
                            requesting = 0,
                                
                            // the clientData object contains data that will be transmited to the server    
                            clientData = {
                                pebbleAppName : 'reserve_client',
                                requested : 0 // the number of pebbles requested to be credited to the users account
                            };

                            app.controller('control', function ($scope) {

                                $scope.reserve = {};
                                $scope.requesting = 0;
                                
                                $scope.takeButton = function(){
                                  
                                    requesting += 1;
                                    $scope.requesting = requesting;
                                    
                                };
                                
                            });
                            
                            angular.bootstrap(angularEL, ['reserve_client']);
                            
                            // standard API for a pebbleApp
                            return {
                                
                                // the client data should be public to pebblebar
                                clientData : clientData,
                                
                                // what to do before a post
                                before : function(){
                                    
                                    // transfer requesting to requested
                                    clientData.requested = requesting;
                                    
                                    angular.element(angularEL).scope().requesting = 0;
                                    angular.element(angularEL).scope().$apply();
                                    requesting = 0;
                                    
                                    
                                },
                                
                                // what to do with the response from the server
                                after : function(response){
                                    
                                    requested = 0;
                                    
                                    angular.element(angularEL).scope().reserve = response.reserve;
                                    angular.element(angularEL).scope().$apply();
                                    
                                    console.log(response);
                                    
                                }
                                
                            }
                            
                        }());
                    </script>

            </div>

    </body>

    </html>